@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc
@using RecruitmentBackend.Features.Users
@using RecruitmentBackend.Utilities
@inject NavigationManager NavigationManager
@inject SignInManager<User> SignInManager

<AuthorizeView>
    <Authorized>
        <button type="submit" class="nav-link btn btn-link" @onclick="LogOut">Log out</button>

        <a href="Identity/Account/Manage">Hello, @context.User.Identity?.Name!</a>
        @{
            var avatar = context.User.FindFirstValue("urn:google:picture");
            if (!string.IsNullOrEmpty(avatar))
            {
                <div class="picture-wrapper">
                    <img class="picture" src="@avatar" alt="" referrerpolicy="no-referrer"/>
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/ExternalLogin?returnUrl=%2Fcounter">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async void LogOut()
    {
        await SignInManager.SignOutAsync();
        NavigationManager.NavigateTo("/");
    }
}
